{"version":3,"sources":["components/AddTodoBar.jsx","images/icon-cross.svg","components/Todo.jsx","components/TodoList.jsx","components/FilterBar.jsx","images/icon-moon.svg","images/icon-sun.svg","components/App.jsx","index.jsx"],"names":["AddTodoBar","handleInputChange","event","setState","newTodo","target","value","handleFormSubmit","preventDefault","state","addTodo","props","this","className","onSubmit","type","onChange","React","Component","Todo","id","index","isCompleted","getThemeClass","toggleTodo","deleteTodo","draggableId","provided","undefined","draggableProps","dragHandleProps","ref","innerRef","name","defaultChecked","onClick","htmlFor","src","crossIcon","alt","TodoList","handleOnDragEnd","result","destination","source","reorderTodos","todos","length","map","data","incompleteItems","clearCompleteTodos","onDragEnd","droppableId","droppableProps","generateTodos","placeholder","FilterBar","setFilterMethod","filterMethod","isActiveFilter","buttonType","App","idToDelete","todoList","updatedList","filter","uuidv4","toggleId","updatedTodo","todo","unshift","getFilteredTodos","getCompletedTodos","getActiveTodos","sourceIndex","destinationIndex","filteredTodos","todoCopy","splice","toggleDarkMode","isDarkMode","lightModeIcon","darkModeIcon","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a3858c7b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddTodoBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      newTodo: '',\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ newTodo: event.target.value });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const { newTodo } = this.state;\n    const { addTodo } = this.props;\n    if (newTodo) {\n      addTodo(newTodo);\n    }\n    this.setState({ newTodo: '' });\n  };\n\n  render() {\n    const { newTodo } = this.state;\n    return (\n      <form className=\"container\" onSubmit={this.handleFormSubmit}>\n        <input type=\"text\" value={newTodo} onChange={this.handleInputChange} />\n      </form>\n    );\n  }\n}\n\nAddTodoBar.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default AddTodoBar;\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\nimport crossIcon from '../images/icon-cross.svg';\n\nclass Todo extends React.Component {\n  render() {\n    const {\n      id, index, value, isCompleted, getThemeClass, toggleTodo, deleteTodo,\n    } = this.props;\n\n    return (\n      <Draggable key={id} draggableId={id} index={index}>\n        {(provided) => (\n          <div\n            id={id}\n            className={`todo flex ${getThemeClass('todo')} ${isCompleted ? 'todo--completed' : undefined}`}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <input\n              type=\"checkbox\"\n              id={id}\n              name=\"todo\"\n              defaultChecked={isCompleted}\n              onClick={() => toggleTodo(id)}\n            />\n            <label htmlFor={id}>{value}</label>\n            <button type=\"button\" className=\"todo--delete\" onClick={() => deleteTodo(id)}>\n              <img src={crossIcon} alt=\"Delete todo\" />\n            </button>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nTodo.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  getThemeClass: PropTypes.func.isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  handleOnDragEnd = (result) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    const { reorderTodos } = this.props;\n    reorderTodos(source.index, destination.index);\n  };\n\n  generateTodos() {\n    const {\n      todos, getThemeClass, deleteTodo, toggleTodo,\n    } = this.props;\n\n    if (todos.length === 0) {\n      return (\n        <div className={`empty-todo-list ${getThemeClass('empty-todo-list')}`}>\n          <h1>No Tasks!</h1>\n        </div>\n      );\n    }\n    return todos.map(({ id, data, isCompleted }, index) => (\n      <Todo\n        id={id}\n        key={id}\n        isCompleted={isCompleted}\n        value={data}\n        deleteTodo={deleteTodo}\n        toggleTodo={toggleTodo}\n        index={index}\n        getThemeClass={getThemeClass}\n      />\n    ));\n  }\n\n  render() {\n    const { getThemeClass, incompleteItems, clearCompleteTodos } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.handleOnDragEnd}>\n        <Droppable droppableId=\"todos\">\n          {(provided) => (\n            <div className=\"todo-list\" {...provided.droppableProps} ref={provided.innerRef}>\n              <div>{this.generateTodos()}</div>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <div className={`flex todos-left ${getThemeClass('todos-left')}`}>\n          <span>\n            {incompleteItems}\n            {' '}\n            items left\n          </span>\n          <button type=\"button\" onClick={clearCompleteTodos}>\n            Clear Completed\n          </button>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  incompleteItems: PropTypes.number.isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  getThemeClass: PropTypes.func.isRequired,\n  reorderTodos: PropTypes.func.isRequired,\n  clearCompleteTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction FilterBar({ getThemeClass, setFilterMethod, filterMethod }) {\n  const isActiveFilter = (buttonType) => buttonType === filterMethod;\n\n  return (\n    <div className={`filter-bar flex ${getThemeClass('filter-bar')}`}>\n      <button\n        type=\"button\"\n        className={`${isActiveFilter('all') ? 'active-filter' : undefined} ${getThemeClass('button')}`}\n        onClick={() => setFilterMethod('all')}\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        className={`${isActiveFilter('active') ? 'active-filter' : undefined} ${getThemeClass('button')}`}\n        onClick={() => setFilterMethod('active')}\n      >\n        Active\n      </button>\n      <button\n        type=\"button\"\n        className={`${isActiveFilter('completed') ? 'active-filter' : undefined} ${getThemeClass('button')}`}\n        onClick={() => setFilterMethod('completed')}\n      >\n        Completed\n      </button>\n    </div>\n  );\n}\n\nFilterBar.propTypes = {\n  getThemeClass: PropTypes.func.isRequired,\n  setFilterMethod: PropTypes.func.isRequired,\n  filterMethod: PropTypes.string.isRequired,\n};\n\nexport default FilterBar;\n","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddTodoBar from './AddTodoBar';\nimport TodoList from './TodoList';\nimport FilterBar from './FilterBar';\nimport './style.css';\nimport darkModeIcon from '../images/icon-moon.svg';\nimport lightModeIcon from '../images/icon-sun.svg';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todoList: [],\n      incompleteItems: 0,\n      filterMethod: 'all',\n      isDarkMode: false,\n    };\n  }\n\n  getActiveTodos() {\n    const { todoList } = this.state;\n    return todoList.filter(({ isCompleted }) => !isCompleted);\n  }\n\n  getCompletedTodos() {\n    const { todoList } = this.state;\n    return todoList.filter(({ isCompleted }) => isCompleted);\n  }\n\n  deleteTodo = (idToDelete) => {\n    const { todoList, incompleteItems } = this.state;\n\n    const updatedList = todoList.filter(({ id, isCompleted }) => {\n      if (id === idToDelete) {\n        if (!isCompleted) {\n          this.setState({ incompleteItems: incompleteItems - 1 });\n        }\n        return false;\n      }\n      return true;\n    });\n    this.setState({\n      todoList: updatedList,\n    });\n  };\n\n  addTodo = (data) => {\n    const { todoList, incompleteItems } = this.state;\n\n    this.setState({\n      todoList: [\n        ...todoList,\n        {\n          id: uuidv4(),\n          data,\n          isCompleted: false,\n        },\n      ],\n    });\n    this.setState({ incompleteItems: incompleteItems + 1, filterMethod: 'all' });\n  };\n\n  toggleTodo = (toggleId) => {\n    const { todoList, incompleteItems } = this.state;\n\n    let updatedTodo;\n\n    const updatedList = todoList.filter((todo) => {\n      if (todo.id === toggleId) {\n        updatedTodo = todo;\n        updatedTodo.isCompleted = !updatedTodo.isCompleted;\n        if (todo.isCompleted) {\n          this.setState({ incompleteItems: incompleteItems - 1 });\n        } else {\n          this.setState({ incompleteItems: incompleteItems + 1 });\n        }\n\n        return false;\n      }\n      return true;\n    });\n\n    if (updatedTodo) {\n      updatedList.unshift(updatedTodo);\n    }\n\n    this.setState({\n      todoList: updatedList,\n    });\n  };\n\n  clearCompleteTodos = () => {\n    const { todoList } = this.state;\n\n    const updatedList = todoList.filter((todo) => !todo.isCompleted);\n    this.setState({ todoList: updatedList });\n  };\n\n  getFilteredTodos = () => {\n    const { todoList, filterMethod } = this.state;\n\n    if (filterMethod === 'completed') {\n      return this.getCompletedTodos();\n    }\n    if (filterMethod === 'active') {\n      return this.getActiveTodos();\n    }\n    return todoList;\n  };\n\n  setFilterMethod = (filterMethod) => {\n    this.setState({ filterMethod });\n  };\n\n  reorderTodos = (sourceIndex, destinationIndex) => {\n    const filteredTodos = this.getFilteredTodos();\n    const todoCopy = [...filteredTodos];\n    todoCopy.splice(sourceIndex, 1);\n    todoCopy.splice(destinationIndex, 0, filteredTodos[sourceIndex]);\n\n    const { filterMethod } = this.state;\n\n    if (filterMethod === 'completed') {\n      this.setState({ todoList: [...todoCopy, ...this.getActiveTodos()] });\n    } else {\n      this.setState({ todoList: [...this.getCompletedTodos(), ...todoCopy] });\n    }\n  };\n\n  toggleDarkMode = () => {\n    const { isDarkMode } = this.state;\n\n    this.setState({ isDarkMode: !isDarkMode });\n  };\n\n  getThemeClass = (className) => {\n    const { isDarkMode } = this.state;\n\n    if (isDarkMode) {\n      return `${className}--dark`;\n    }\n    return `${className}--light`;\n  };\n\n  render() {\n    const { isDarkMode, incompleteItems, filterMethod } = this.state;\n\n    return (\n      <div className={`wrapper ${this.getThemeClass('wrapper')}`}>\n        <header className={`${this.getThemeClass('header')}`}>\n          <nav className=\"container flex\">\n            <h1>TODO</h1>\n            <button type=\"button\" onClick={this.toggleDarkMode}>\n              <img src={isDarkMode ? lightModeIcon : darkModeIcon} alt=\"dark mode\" />\n            </button>\n          </nav>\n          <AddTodoBar addTodo={this.addTodo} />\n        </header>\n        <main className=\"container\">\n          <TodoList\n            todos={this.getFilteredTodos()}\n            toggleTodo={this.toggleTodo}\n            deleteTodo={this.deleteTodo}\n            incompleteItems={incompleteItems}\n            clearCompleteTodos={this.clearCompleteTodos}\n            reorderTodos={this.reorderTodos}\n            getThemeClass={this.getThemeClass}\n          />\n          <FilterBar\n            getThemeClass={this.getThemeClass}\n            setFilterMethod={this.setFilterMethod}\n            filterMethod={filterMethod}\n          />\n        </main>\n        <footer className=\"container\">\n          <p>Drag and drop to reorder list</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}