{"version":3,"sources":["components/ListCategory.jsx","components/SearchBar.jsx","pages/AddCategory.jsx","actions/index.js","pages/HomePage.jsx","images/icon-cross.svg","utils/index.js","components/Todo.jsx","pages/AddTodoPage.jsx","pages/TodoPage.jsx","components/App.jsx","reducers/todoReducer.js","reducers/categoriesReducer.js","reducers/index.js","reducers/darkModeReducer.js","index.jsx"],"names":["ListCategory","name","itemCount","className","SearchBar","showBackButton","to","type","defaultProps","AddCategory","setShouldShowAddCategoryPage","dispatch","useDispatch","useState","category","setCategory","onFormSubmit","event","categoryName","preventDefault","payload","id","uuidv4","onSubmit","htmlFor","value","onChange","target","onClick","getCategories","personalCategories","map","HomePage","mainCategories","shouldShowAddCategoryPage","connect","categories","todos","categoriesWithCount","filter","todo","categoryId","length","splice","getThemeClass","isDarkMode","getFromLocalStorage","key","savedTodos","window","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","Todo","props","isCompleted","inputValue","setInputValue","undefined","defaultChecked","toggleTodo","todoValue","updateTodo","onKeyPress","blur","deleteTodo","src","crossIcon","alt","NewTodo","setShouldShowNewTodoPage","allCategories","useSelector","newTodo","setNewTodo","addTodo","defaultValue","TodoPage","useParams","shouldShowNewTodoPage","filteredTodos","AddTodoPage","index","App","path","exact","reorderTodos","sourceIndex","destinationIndex","todoCopy","defaultCategories","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.43adae54.chunk.js","sourcesContent":["import { React } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListCategory = ({ name, itemCount }) => (\n  <div className=\"category\">\n    {name}\n    <span className=\"category__item-count\">{itemCount}</span>\n  </div>\n);\n\nListCategory.propTypes = {\n  name: PropTypes.string.isRequired,\n  itemCount: PropTypes.number.isRequired,\n};\n\nexport default ListCategory;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ showBackButton }) => (\n  <form className=\"search-bar flex\">\n    {showBackButton && (\n      <Link to=\"/\">\n        <button className=\"back-button\" type=\"button\">‚ùÆ</button>\n      </Link>\n    )}\n    <input type=\"text\" />\n    <button type=\"submit\">üîç </button>\n  </form>\n);\n\nSearchBar.propTypes = {\n  showBackButton: PropTypes.bool,\n};\n\nSearchBar.defaultProps = {\n  showBackButton: false,\n};\n\nexport default SearchBar;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addCategory } from '../actions';\n\nconst AddCategory = ({ setShouldShowAddCategoryPage }) => {\n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    setShouldShowAddCategoryPage(false);\n    if (category) dispatch(addCategory(category));\n  };\n\n  return (\n    <form\n      className=\"new-todo flex\"\n      onSubmit={(event) => onFormSubmit(event, setShouldShowAddCategoryPage)}\n    >\n      <div className=\"form-content flex\">\n        <label htmlFor=\"addCategory\">Add new category</label>\n        <input\n          id=\"addCategory\"\n          type=\"text\"\n          value={category}\n          onChange={(event) => setCategory(event.target.value)}\n        />\n\n        <div className=\"flex\">\n          <button type=\"button\" onClick={() => setShouldShowAddCategoryPage(false)}>\n            Cancel\n          </button>\n          <button type=\"submit\">Save</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setShouldShowAddCategoryPage: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport function addCategory(categoryName) {\n  return {\n    type: 'ADD_CATEGORY',\n    payload: {\n      id: uuidv4(),\n      name: categoryName,\n    },\n  };\n}\n\nexport function deleteCategory(id) {\n  return {\n    type: 'DELETE_CATEGORY',\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function updateCategory(id, categoryName) {\n  return {\n    type: 'UPDATE_CATEGORY',\n    payload: {\n      id,\n      value: categoryName,\n    },\n  };\n}\n\nexport function addTodo(todoValue, categoryId) {\n  return {\n    type: 'ADD_TODO',\n    payload: {\n      id: uuidv4(),\n      value: todoValue,\n      categoryId,\n      isCompleted: false,\n    },\n  };\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: 'DELETE_TODO',\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function updateTodo(id, todoValue) {\n  return {\n    type: 'UPDATE_TODO',\n    payload: {\n      id,\n      value: todoValue,\n    },\n  };\n}\n\nexport function toggleTodo(id) {\n  return {\n    type: 'TOGGLE_TODO',\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function clearCompletedTodos() {\n  return {\n    type: 'CLEAR_COMPLETED_TODOS',\n  };\n}\n\nexport function reorderTodos(sourceIndex, destinationIndex) {\n  return {\n    type: 'REORDER_TODOS',\n    payload: {\n      sourceIndex,\n      destinationIndex,\n    },\n  };\n}\n\nexport function toggleDarkMode() {\n  return {\n    type: 'TOGGLE_DARK_MODE',\n  };\n}\n","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport ListCategory from '../components/ListCategory';\nimport './homePage.scss';\nimport SearchBar from '../components/SearchBar';\nimport AddCategory from './AddCategory';\n\nconst getCategories = (personalCategories) => personalCategories.map((category) => (\n  <Link key={category.id} to={`/category/${category.id}`}>\n    <ListCategory name={category.name} itemCount={category.itemCount} />\n  </Link>\n));\n\nconst HomePage = ({ personalCategories, mainCategories }) => {\n  const [shouldShowAddCategoryPage, setShouldShowAddCategoryPage] = useState(false);\n\n  if (shouldShowAddCategoryPage) {\n    return <AddCategory setShouldShowAddCategoryPage={setShouldShowAddCategoryPage} />;\n  }\n\n  return (\n    <div className=\" \">\n      <SearchBar />\n      <div className=\"main-categories\">{getCategories(mainCategories)}</div>\n      <div className=\"personal-categories\">{getCategories(personalCategories)}</div>\n      <div className=\"add-bar container flex\">\n        <button\n          type=\"button\"\n          onClick={() => setShouldShowAddCategoryPage(!shouldShowAddCategoryPage)}\n        >\n          Add category\n        </button>\n      </div>\n    </div>\n  );\n};\n\nHomePage.propTypes = {\n  personalCategories: PropTypes.arrayOf(\n    PropTypes.shape({ value: PropTypes.string, itemCount: PropTypes.number }),\n  ),\n  mainCategories: PropTypes.arrayOf(\n    PropTypes.shape({ value: PropTypes.string, itemCount: PropTypes.number }),\n  ),\n};\n\nHomePage.defaultProps = {\n  personalCategories: [],\n  mainCategories: [],\n};\n\nconst mapStateToProps = ({ categories, todos }) => {\n  const categoriesWithCount = categories.map((category) => ({\n    id: category.id,\n    name: category.name,\n    itemCount: todos.filter((todo) => category.id === todo.categoryId).length,\n  }));\n\n  const mainCategories = categoriesWithCount.splice(0, 2);\n  return {\n    mainCategories,\n    personalCategories: categoriesWithCount,\n  };\n};\n\nexport default connect(mapStateToProps)(HomePage);\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","export function getThemeClass(className, isDarkMode) {\n  if (isDarkMode) {\n    return `${className}--dark`;\n  }\n  return `${className}--light`;\n}\n\nexport function somFunc() {}\n\nexport function getFromLocalStorage(key) {\n  const savedTodos = window.localStorage.getItem(key);\n  if (savedTodos) {\n    return JSON.parse(savedTodos);\n  }\n\n  return undefined;\n}\n\nexport function saveToLocalStorage(key, value) {\n  window.localStorage.setItem(key, JSON.stringify(value));\n  return value;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { Draggable } from 'react-beautiful-dnd';\n// import { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport crossIcon from '../images/icon-cross.svg';\nimport { getThemeClass } from '../utils';\nimport { toggleTodo, deleteTodo, updateTodo } from '../actions';\n\nfunction Todo(props) {\n  const {\n    id,\n    // index,\n    value,\n    isCompleted,\n    // toggleTodoAction,\n    // deleteTodoAction,\n    isDarkMode,\n    // updateTodoAction,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const [inputValue, setInputValue] = useState(value);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n    //  updateTodoAction(id, event.target.value);\n    dispatch(updateTodo(id, event.target.value));\n  };\n\n  const handleEnter = (event) => {\n    if (event.key === 'Enter') {\n      event.target.blur();\n    }\n  };\n\n  return (\n    // <Draggable key={id} draggableId={id} index={index}>\n    //   {(provided) => (\n    <div\n      id={id}\n      className={`todo flex ${getThemeClass('todo', isDarkMode)} ${\n        isCompleted ? 'todo--completed' : undefined\n      }`}\n      // {...provided.draggableProps}\n      // {...provided.dragHandleProps}\n      // ref={provided.innerRef}\n    >\n      <input\n        type=\"checkbox\"\n        id={id}\n        name=\"todo\"\n        defaultChecked={isCompleted}\n        onClick={() => dispatch(toggleTodo(id))}\n      />\n      <textarea\n        className={`todo-text ${getThemeClass('todo-text', isDarkMode)}`}\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onKeyPress={handleEnter}\n      />\n      <button type=\"button\" className=\"todo--delete\" onClick={() => dispatch(deleteTodo(id))}>\n        <img src={crossIcon} alt=\"Delete todo\" />\n      </button>\n    </div>\n    //   )}\n    // </Draggable>\n  );\n}\n\nTodo.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  // index: PropTypes.number.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  // toggleTodoAction: PropTypes.func.isRequired,\n  // deleteTodoAction: PropTypes.func.isRequired,\n  isDarkMode: PropTypes.bool.isRequired,\n  // updateTodoAction: PropTypes.func.isRequired,\n};\n\n// function mapStateToProps({ isDarkMode }) {\n//   return {\n//     isDarkMode,\n//   };\n// }\n\nexport default Todo;\n\n// export default connect(mapStateToProps, {\n//   toggleTodoAction: toggleTodo,\n//   deleteTodoAction: deleteTodo,\n//   updateTodoAction: updateTodo,\n// })(Todo);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo } from '../actions';\n\nconst NewTodo = ({ setShouldShowNewTodoPage, categoryId }) => {\n  const allCategories = useSelector(({ categories }) => categories);\n\n  // eslint-disable-next-line max-len\n  const getCategories = (categories) => categories.map((category) => <option value={category.id}>{category.name}</option>);\n  const dispatch = useDispatch();\n\n  const [newTodo, setNewTodo] = useState('');\n  const [category, setCategory] = useState(categoryId);\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    setShouldShowNewTodoPage(false);\n\n    if (newTodo) dispatch(addTodo(newTodo, category));\n  };\n\n  return (\n    <form\n      className=\"new-todo flex\"\n      onSubmit={(event) => onFormSubmit(event, setShouldShowNewTodoPage)}\n    >\n      <div className=\"form-content flex\">\n        <label htmlFor=\"newtodo\">Add new todo</label>\n        <input\n          id=\"newtodo\"\n          type=\"text\"\n          value={newTodo}\n          onChange={(event) => setNewTodo(event.target.value)}\n        />\n        <label htmlFor=\"categories\">Category</label>\n        <select\n          defaultValue={categoryId}\n          name=\"categories\"\n          onChange={(event) => setCategory(event.target.value)}\n        >\n          {getCategories(allCategories)}\n        </select>\n        <div className=\"flex\">\n          <button type=\"button\" onClick={() => setShouldShowNewTodoPage(false)}>\n            Cancel\n          </button>\n          <button type=\"submit\">Save</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nNewTodo.propTypes = {\n  setShouldShowNewTodoPage: PropTypes.func.isRequired,\n  categoryId: PropTypes.string.isRequired,\n};\n\nexport default NewTodo;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar';\nimport Todo from '../components/Todo';\nimport AddTodoPage from './AddTodoPage';\n\nconst generateTodos = (todos) => todos.map(({\n  id, value, isCompleted, categoryId,\n}, index) => (\n  <Todo\n    id={id}\n    key={id}\n    isCompleted={isCompleted}\n    value={value}\n    index={index}\n    categoryId={categoryId}\n  />\n));\n\nconst TodoPage = () => {\n  const { id: categoryId } = useParams();\n\n  const [shouldShowNewTodoPage, setShouldShowNewTodoPage] = useState(false);\n  // eslint-disable-next-line max-len\n  const filteredTodos = useSelector(({ todos }) => todos.filter((todo) => categoryId === todo.categoryId));\n  if (shouldShowNewTodoPage) {\n    return (\n      <AddTodoPage setShouldShowNewTodoPage={setShouldShowNewTodoPage} categoryId={categoryId} />\n    );\n  }\n  return (\n    <div className=\"\">\n      <SearchBar showBackButton />\n      <div className=\"todos\">{generateTodos(filteredTodos)}</div>\n      <div className=\"add-bar  flex\">\n        <button\n          className=\"button__add-todo\"\n          type=\"button\"\n          onClick={() => setShouldShowNewTodoPage(true)}\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoPage;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport HomePage from '../pages/HomePage';\nimport TodoPage from '../pages/TodoPage';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import AddTodoBar from './AddTodoBar';\n// import TodoList from './TodoList';\n// import FilterBar from './FilterBar';\n// import './style.css';\n// import darkModeIcon from '../images/icon-moon.svg';\n// import lightModeIcon from '../images/icon-sun.svg';\n// import { getThemeClass } from '../utils';\n// import { toggleDarkMode } from '../actions';\n\n// function App({ isDarkMode, toggleDarkModeAction }) {\n//   const [filterType, setFilterType] = useState('ALL');\n\n//   return (\n//     <div className={`wrapper ${getThemeClass('wrapper', isDarkMode)}`}>\n//       <header className={`${getThemeClass('header', isDarkMode)}`}>\n//         <nav className=\"container flex\">\n//           <h1>TODO</h1>\n//           <button type=\"button\" onClick={toggleDarkModeAction}>\n//             <img src={isDarkMode ? lightModeIcon : darkModeIcon} alt=\"dark mode\" />\n//           </button>\n//         </nav>\n//         <AddTodoBar filterType={filterType} setFilterType={setFilterType} />\n//       </header>\n//       <main className=\"container main\">\n//         <TodoList filterType={filterType} />\n//         <FilterBar setFilterType={setFilterType} filterType={filterType} />\n//       </main>\n//       <footer className=\"container\">\n//         <p>Drag and drop to reorder list</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// App.propTypes = {\n//   isDarkMode: PropTypes.bool.isRequired,\n//   toggleDarkModeAction: PropTypes.func.isRequired,\n// };\n\n// function mapStateToProps({ isDarkMode }) {\n//   return {\n//     isDarkMode,\n//   };\n// }\n\n// export default connect(mapStateToProps, { toggleDarkModeAction: toggleDarkMode })(App);\n\nconst App = () => (\n  <div className=\"container flex\">\n    <HashRouter>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/category/:id\" exact>\n        <TodoPage />\n      </Route>\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable max-len */\nimport { getFromLocalStorage, saveToLocalStorage } from '../utils';\n\nexport default function todoReducer(todos = getFromLocalStorage('todos') || [], { type, payload }) {\n  switch (type) {\n    case 'ADD_TODO':\n      return saveToLocalStorage('todos', [payload, ...todos]);\n\n    case 'DELETE_TODO':\n      return saveToLocalStorage(\n        'todos',\n        todos.filter((todo) => todo.id !== payload.id),\n      );\n\n    case 'UPDATE_TODO':\n      return saveToLocalStorage(\n        'todos',\n        todos.map((todo) => (todo.id === payload.id ? { ...todo, value: payload.value } : todo)),\n      );\n\n    case 'TOGGLE_TODO':\n      return saveToLocalStorage(\n        'todos',\n        todos.map((todo) => (todo.id === payload.id ? { ...todo, isCompleted: !todo.isCompleted } : todo)),\n      );\n\n    case 'CLEAR_COMPLETED_TODOS':\n      return saveToLocalStorage(\n        'todos',\n        todos.filter((todo) => todo.isCompleted === false),\n      );\n\n    case 'REORDER_TODOS':\n      return saveToLocalStorage(\n        'todos',\n        reorderTodos(todos, payload.sourceIndex, payload.destinationIndex),\n      );\n\n    default:\n      return todos;\n  }\n}\n\n// function toggleTodo(todos, id) {\n//   let todoIndex;\n//   const foundTodo = todos.find((todo, index) => {\n//     todoIndex = index;\n//     return todo.id === id;\n//   });\n//   foundTodo.isCompleted = !foundTodo.isCompleted;\n\n//   const todoCopy = [...todos];\n//   todoCopy.splice(todoIndex, 1);\n//   todoCopy.push(foundTodo);\n//   return todoCopy;\n// }\n\nfunction reorderTodos(todos, sourceIndex, destinationIndex) {\n  const todoCopy = [...todos];\n  todoCopy.splice(sourceIndex, 1);\n  todoCopy.splice(destinationIndex, 0, todos[sourceIndex]);\n\n  return todoCopy;\n}\n","import { getFromLocalStorage, saveToLocalStorage } from '../utils';\n\nconst defaultCategories = [\n  {\n    id: '1',\n    name: 'Today',\n  },\n  {\n    id: '2',\n    name: 'Someday',\n  },\n];\n\nexport default function categoriesReducer(\n  categories = getFromLocalStorage('categories') || defaultCategories,\n  { type, payload },\n) {\n  switch (type) {\n    case 'ADD_CATEGORY':\n      return saveToLocalStorage('categories', [...categories, payload]);\n\n    case 'DELETE_CATEGORY':\n      return saveToLocalStorage(\n        'categories',\n        categories.filter((category) => category.id !== payload.id),\n      );\n\n    case 'UPDATE_CATEGORY':\n      return saveToLocalStorage(\n        'categories',\n        categories.map((category) => (\n          category.id === payload.id ? { ...category, value: payload.value } : category)),\n      );\n\n      // case 'REORDER_TODOS':\n      //   return saveToLocalStorage(\n      //     'todos',\n      //     reorderTodos(todos, payload.sourceIndex, payload.destinationIndex),\n      //   );\n\n    default:\n      return categories;\n  }\n}\n","import { combineReducers } from 'redux';\nimport todoReducer from './todoReducer';\nimport darkModeReducer from './darkModeReducer';\nimport categoriesReducer from './categoriesReducer';\n\nexport default combineReducers({\n  categories: categoriesReducer,\n  todos: todoReducer,\n  isDarkMode: darkModeReducer,\n});\n","import { getFromLocalStorage, saveToLocalStorage } from '../utils';\n\nexport default function todoReducer(isDarkMode = getFromLocalStorage('isDarkMode') || false, action) {\n  if (action.type === 'TOGGLE_DARK_MODE') {\n    return saveToLocalStorage('isDarkMode', !isDarkMode);\n  }\n\n  return isDarkMode;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}