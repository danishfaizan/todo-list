{"version":3,"sources":["components/AddTodoBar.jsx","images/icon-cross.svg","components/Todo.jsx","components/TodoList.jsx","components/FilterBar.jsx","images/icon-moon.svg","images/icon-sun.svg","components/App.jsx","index.js"],"names":["AddTodoBar","state","newTodo","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","props","addTodo","className","onSubmit","this","type","onChange","React","Component","Todo","draggableId","id","index","provided","getThemeClass","isCompleted","undefined","draggableProps","dragHandleProps","ref","innerRef","name","defaultChecked","onClick","toggleTodo","htmlFor","deleteTodo","src","crossIcon","alt","TodoList","handleOnDragEnd","result","destination","source","reorderTodos","todos","length","map","data","onDragEnd","droppableId","droppableProps","generateTodos","placeholder","incompleteItems","clearCompleteTodos","FilterBar","filterMethod","setFilterMethod","App","todoList","isDarkMode","uuidv4","idToDelete","updatedList","filter","toggleId","updatedTodo","todo","unshift","getFilteredTodos","getCompletedTodos","getActiveTodos","sourceIndex","destinationIndex","console","log","filteredTodos","todoCopy","splice","toggleDarkMode","lightModeIcon","darkModeIcon","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.04821b56.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddTodoBar extends React.Component {\n\tstate = {\n\t\tnewTodo: '',\n\t};\n\n\thandleInputChange = (event) => {\n\t\tthis.setState({ newTodo: event.target.value });\n\t};\n\n\thandleFormSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (this.state.newTodo) {\n\t\t\tthis.props.addTodo(this.state.newTodo);\n\t\t}\n\t\tthis.setState({ newTodo: '' });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"container\" onSubmit={this.handleFormSubmit}>\n\t\t\t\t<input type=\"text\" value={this.state.newTodo} onChange={this.handleInputChange} />\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddTodoBar;\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport crossIcon from '../images/icon-cross.svg';\nclass Todo extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Draggable key={this.props.id} draggableId={this.props.id} index={this.props.index}>\n\t\t\t\t{(provided) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\tclassName={`todo flex ${this.props.getThemeClass('todo')} ${\n\t\t\t\t\t\t\tthis.props.isCompleted ? 'todo--completed' : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\t`}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\t\tname=\"todo\"\n\t\t\t\t\t\t\tdefaultChecked={this.props.isCompleted}\n\t\t\t\t\t\t\tonClick={() => this.props.toggleTodo(this.props.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor={this.props.id}>{this.props.value}</label>\n\t\t\t\t\t\t<button className=\"todo--delete\" onClick={() => this.props.deleteTodo(this.props.id)}>\n\t\t\t\t\t\t\t<img src={crossIcon} alt=\"Delete todo\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\nexport default Todo;\n","import { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport React from 'react';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n\tgenerateTodos() {\n\t\tif (this.props.todos.length === 0) {\n\t\t\treturn (\n\t\t\t\t<div className={`empty-todo-list ${this.props.getThemeClass('empty-todo-list')}`}>\n\t\t\t\t\t<h1>No Tasks!</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn this.props.todos.map(({ id, data, isCompleted }, index) => (\n\t\t\t<Todo\n\t\t\t\tid={id}\n\t\t\t\tkey={id}\n\t\t\t\tisCompleted={isCompleted}\n\t\t\t\tvalue={data}\n\t\t\t\tdeleteTodo={this.props.deleteTodo}\n\t\t\t\ttoggleTodo={this.props.toggleTodo}\n\t\t\t\tindex={index}\n\t\t\t\tgetThemeClass={this.props.getThemeClass}\n\t\t\t/>\n\t\t));\n\t}\n\n\thandleOnDragEnd = (result) => {\n\t\tconst { destination, source } = result;\n\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.reorderTodos(source.index, destination.index);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<DragDropContext onDragEnd={this.handleOnDragEnd}>\n\t\t\t\t<Droppable droppableId=\"todos\">\n\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t<div className=\"todo-list\" {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t<div>{this.generateTodos()}</div>\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t\t<div className={`flex todos-left ${this.props.getThemeClass('todos-left')}`}>\n\t\t\t\t\t<span>{this.props.incompleteItems} items left</span>\n\t\t\t\t\t<button onClick={this.props.clearCompleteTodos}>Clear Completed</button>\n\t\t\t\t</div>\n\t\t\t</DragDropContext>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n","import React from 'react';\n\n// function getButtonClassnames(props) {\n// \tconst isActive = props.filterMethod === 'all' ? 'active-filter' : undefined;\n// \treturn `${this.getThemeClass('filter-bar')}   ${isActive}`;\n// }\n\nfunction FilterBar(props) {\n\treturn (\n\t\t<div className={`filter-bar flex ${props.getThemeClass('filter-bar')}`}>\n\t\t\t<button\n\t\t\t\tclassName={props.filterMethod === 'all' ? 'active-filter' : undefined}\n\t\t\t\tonClick={() => props.setFilterMethod('all')}\n\t\t\t>\n\t\t\t\tAll\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={props.filterMethod === 'active' ? 'active-filter' : undefined}\n\t\t\t\tonClick={() => props.setFilterMethod('active')}\n\t\t\t>\n\t\t\t\tActive\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={props.filterMethod === 'completed' ? 'active-filter' : undefined}\n\t\t\t\tonClick={() => props.setFilterMethod('completed')}\n\t\t\t>\n\t\t\t\tCompleted\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default FilterBar;\n","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddTodoBar from './AddTodoBar';\nimport TodoList from './TodoList';\nimport FilterBar from './FilterBar';\nimport './style.css';\nimport darkModeIcon from '../images/icon-moon.svg';\nimport lightModeIcon from '../images/icon-sun.svg';\n\nclass App extends React.Component {\n\tstate = {\n\t\ttodoList: [],\n\t\tincompleteItems: 0,\n\t\tfilterMethod: 'all',\n\t\tisDarkMode: false,\n\t};\n\n\taddTodo = (data) => {\n\t\tthis.setState({\n\t\t\ttodoList: [\n\t\t\t\t...this.state.todoList,\n\t\t\t\t{\n\t\t\t\t\tid: uuidv4(),\n\t\t\t\t\tdata,\n\t\t\t\t\tisCompleted: false,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tthis.setState({ incompleteItems: this.state.incompleteItems + 1, filterMethod: 'all' });\n\t};\n\n\tdeleteTodo = (idToDelete) => {\n\t\tconst updatedList = this.state.todoList.filter(({ id, isCompleted }) => {\n\t\t\tif (id === idToDelete) {\n\t\t\t\tif (!isCompleted) {\n\t\t\t\t\tthis.setState({ incompleteItems: this.state.incompleteItems - 1 });\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\ttodoList: updatedList,\n\t\t});\n\t};\n\n\ttoggleTodo = (toggleId) => {\n\t\tlet updatedTodo;\n\t\tconst updatedList = this.state.todoList.filter((todo) => {\n\t\t\tif (todo.id === toggleId) {\n\t\t\t\tupdatedTodo = todo;\n\t\t\t\tupdatedTodo.isCompleted = !updatedTodo.isCompleted;\n\t\t\t\tif (todo.isCompleted) {\n\t\t\t\t\tthis.setState({ incompleteItems: this.state.incompleteItems - 1 });\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ incompleteItems: this.state.incompleteItems + 1 });\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tif (updatedTodo) {\n\t\t\tupdatedList.unshift(updatedTodo);\n\t\t}\n\n\t\tthis.setState({\n\t\t\ttodoList: updatedList,\n\t\t});\n\t};\n\n\tgetActiveTodos() {\n\t\treturn this.state.todoList.filter(({ isCompleted }) => !isCompleted);\n\t}\n\n\tgetCompletedTodos() {\n\t\treturn this.state.todoList.filter(({ isCompleted }) => isCompleted);\n\t}\n\n\tclearCompleteTodos = () => {\n\t\tconst updatedList = this.state.todoList.filter((todo) => !todo.isCompleted);\n\t\tthis.setState({ todoList: updatedList });\n\t};\n\n\tgetFilteredTodos = () => {\n\t\tif (this.state.filterMethod === 'completed') {\n\t\t\treturn this.getCompletedTodos();\n\t\t} else if (this.state.filterMethod === 'active') {\n\t\t\treturn this.getActiveTodos();\n\t\t}\n\t\treturn this.state.todoList;\n\t};\n\n\tsetFilterMethod = (filterMethod) => {\n\t\tthis.setState({ filterMethod });\n\t};\n\n\treorderTodos = (sourceIndex, destinationIndex) => {\n\t\tconsole.log('Reordering todos ', sourceIndex, destinationIndex);\n\t\tconst filteredTodos = this.getFilteredTodos();\n\t\tconst todoCopy = [...filteredTodos];\n\t\ttodoCopy.splice(sourceIndex, 1);\n\t\ttodoCopy.splice(destinationIndex, 0, filteredTodos[sourceIndex]);\n\n\t\tif (this.state.filterMethod === 'completed') {\n\t\t\tthis.setState({ todoList: [...todoCopy, ...this.getActiveTodos()] });\n\t\t} else {\n\t\t\tthis.setState({ todoList: [...this.getCompletedTodos(), ...todoCopy] });\n\t\t}\n\t};\n\n\ttoggleDarkMode = () => {\n\t\tthis.setState({ isDarkMode: !this.state.isDarkMode });\n\t};\n\n\tgetThemeClass = (className) => {\n\t\tif (this.state.isDarkMode) {\n\t\t\treturn className + '--dark';\n\t\t} else {\n\t\t\treturn className + '--light';\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={`wrapper ${this.getThemeClass('wrapper')}`}>\n\t\t\t\t<header className={`${this.getThemeClass('header')}`}>\n\t\t\t\t\t<nav className=\"container flex\">\n\t\t\t\t\t\t<h1>TODO</h1>\n\t\t\t\t\t\t<button onClick={this.toggleDarkMode}>\n\t\t\t\t\t\t\t<img src={this.state.isDarkMode ? lightModeIcon : darkModeIcon} alt=\"dark mode\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<AddTodoBar addTodo={this.addTodo} />\n\t\t\t\t</header>\n\t\t\t\t<main className=\"container\">\n\t\t\t\t\t<TodoList\n\t\t\t\t\t\ttodos={this.getFilteredTodos()}\n\t\t\t\t\t\ttoggleTodo={this.toggleTodo}\n\t\t\t\t\t\tdeleteTodo={this.deleteTodo}\n\t\t\t\t\t\tincompleteItems={this.state.incompleteItems}\n\t\t\t\t\t\tclearCompleteTodos={this.clearCompleteTodos}\n\t\t\t\t\t\treorderTodos={this.reorderTodos}\n\t\t\t\t\t\tgetThemeClass={this.getThemeClass}\n\t\t\t\t\t/>\n\t\t\t\t\t<FilterBar\n\t\t\t\t\t\tgetThemeClass={this.getThemeClass}\n\t\t\t\t\t\tsetFilterMethod={this.setFilterMethod}\n\t\t\t\t\t\tfilterMethod={this.state.filterMethod}\n\t\t\t\t\t/>\n\t\t\t\t</main>\n\t\t\t\t<footer className=\"container\">\n\t\t\t\t\t<p>Drag and drop to reorder list</p>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}